name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version type (major, minor, patch)'
        required: true
        default: 'patch'
        type: choice
        options:
        - major
        - minor
        - patch
      pre_release:
        description: 'Create pre-release'
        required: false
        default: 'false'
        type: boolean

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    outputs:
      new_version: ${{ steps.version.outputs.new_version }}
      is_pre_release: ${{ steps.version.outputs.is_pre_release }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Bump version
      id: version
      run: |
        # Get current version from package.json
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        
        # Determine version bump type
        VERSION_TYPE="${{ github.event.inputs.version_type }}"
        PRE_RELEASE="${{ github.event.inputs.pre_release }}"
        
        # Use standard-version for semantic versioning
        npx standard-version --prerelease alpha --skip.commit --skip.tag --skip.changelog
        
        # Get new version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "New version: $NEW_VERSION"
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "is_pre_release=$PRE_RELEASE" >> $GITHUB_OUTPUT
        
    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json package-lock.json
        git commit -m "chore: Bump version to ${{ steps.version.outputs.new_version }}" -m "Automated version bump"
        
    - name: Create and push tag
      run: |
        if [ "${{ steps.version.outputs.is_pre_release }}" = "true" ]; then
          git tag "v${{ steps.version.outputs.new_version }}-alpha"
        else
          git tag "v${{ steps.version.outputs.new_version }}"
        fi
        git push
        git push --tags

  create-release:
    needs: bump-version
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.bump-version.outputs.new_version }}${{ needs.bump-version.outputs.is_pre_release == 'true' && '-alpha' || '' }}
        name: Release v${{ needs.bump-version.outputs.new_version }}${{ needs.bump-version.outputs.is_pre_release == 'true' && ' Alpha' || '' }}
        body: |
          ## What's Changed
          
          This release was automatically generated by GitHub Actions.
          
          ## Version Information
          - Version: ${{ needs.bump-version.outputs.new_version }}
          - Type: ${{ needs.bump-version.outputs.is_pre_release == 'true' && 'Pre-release' || 'Stable' }}
          
          ## Installation
          ```bash
          npm install llm-wordsearch@${{ needs.bump-version.outputs.new_version }}
          ```
          
          ## Changelog
          ${{ github.event.inputs.version_type == 'major' && '### Major Features\n\n- Major version update with breaking changes\n' || '' }}
          ${{ github.event.inputs.version_type == 'minor' && '### Minor Features\n\n- Minor version update with new features\n' || '' }}
          ${{ github.event.inputs.version_type == 'patch' && '### Bug Fixes\n\n- Patch version update with bug fixes\n' || '' }}
          
        draft: false
        prerelease: ${{ needs.bump-version.outputs.is_pre_release }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}